
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://znaextoidbxrhedufxpc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpuYWV4dG9pZGJ4cmhlZHVmeHBjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIyNjk0NTMsImV4cCI6MjA1Nzg0NTQ1M30.hlVtbrxunx3NhPflxzl_rnqQXmlR6vJkEMOFj_1Uk5g";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Add custom type declarations for our new tables 
// until we can update the generated types.ts file
declare module '@supabase/supabase-js' {
  interface Database {
    public: {
      Tables: {
        practice_sessions: {
          Row: {
            id: string;
            user_id: string;
            type: string;
            title: string;
            duration: number | null;
            created_at: string;
            updated_at: string;
          };
          Insert: {
            id?: string;
            user_id: string;
            type: string;
            title: string;
            duration?: number | null;
            created_at?: string;
            updated_at?: string;
          };
          Update: {
            id?: string;
            user_id?: string;
            type?: string;
            title?: string;
            duration?: number | null;
            created_at?: string;
            updated_at?: string;
          };
          Relationships: [
            {
              foreignKeyName: "practice_sessions_user_id_fkey";
              columns: ["user_id"];
              referencedRelation: "users";
              referencedColumns: ["id"];
            }
          ];
        };
        session_messages: {
          Row: {
            id: string;
            session_id: string;
            content: string;
            is_ai: boolean;
            created_at: string;
          };
          Insert: {
            id?: string;
            session_id: string;
            content: string;
            is_ai?: boolean;
            created_at?: string;
          };
          Update: {
            id?: string;
            session_id?: string;
            content?: string;
            is_ai?: boolean;
            created_at?: string;
          };
          Relationships: [
            {
              foreignKeyName: "session_messages_session_id_fkey";
              columns: ["session_id"];
              referencedRelation: "practice_sessions";
              referencedColumns: ["id"];
            }
          ];
        };
      };
    };
  }
}
